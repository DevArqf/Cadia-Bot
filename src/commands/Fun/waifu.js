const BeemoCommand = require('../../lib/structures/commands/BeemoCommand');
const { PermissionLevels } = require('../../lib/types/Enums');
const { color, emojis } = require('../../config');
const { EmbedBuilder } = require('discord.js');
const fetch = (...args) => import('node-fetch').then(({ default: fetch }) => fetch(...args));

class UserCommand extends BeemoCommand {
	/**
	 * @param {BeemoCommand.Context} context
	 * @param {BeemoCommand.Options} options
	 */
	constructor(context, options) {
		super(context, {
			...options,
			description: 'Generate a waifu Image'
		});
	}

	/**
	 * @param {BeemoCommand.Registry} registry
	 */
	registerApplicationCommands(registry) {
		registry.registerChatInputCommand((builder) =>
			builder //
				.setName('waifu')
				.setDescription(this.description)
				.addStringOption(option => 
					option.setName('category')
						.setDescription('Choose your category')
						.setRequired(true)
						.addChoices(
							{name:'Marin Kitagawa', value:'marin-kitagawa'},
							{name:'Mori Calliope', value:'mori-calliope'},
							{name:'Raiden Shogun', value:'raiden-shogun'},
							{name:'Waifu', value:'waifu'},
							{name:'Maid',value:'maid'},
							{name:'Oppai',value: 'oppai'},
							{name:'Selfies', value:'selfies'},
							{name:'Uniform', value:'uniform'}
						)),
		);
	}

	/**
	 * @param {BeemoCommand.ChatInputCommandInteraction} interaction
	 */
	async chatInputRun(interaction) {

        const type = interaction.options.getString('category');
        const body = await fetch(`https://api.waifu.im/search/?included_tags=${type}`).then(res => res.json());

        const embed = new EmbedBuilder()
			.setColor(color.random)
            .setTitle(`${interaction.user.username}'s Waifu!`)
            .setFooter({ text: `Waifu Generated by ${interaction.user.displayName}`, iconURL: interaction.user.displayAvatarURL() })
            .setImage(body.images[0].url)
            .setTimestamp();
        interaction.reply({ embeds: [embed] });

        const message = await interaction.fetchReply();
    
        await message.react('👍');
        await message.react('👎');
    }
};

module.exports = {
	UserCommand
};
